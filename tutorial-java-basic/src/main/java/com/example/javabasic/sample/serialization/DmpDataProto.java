// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: .proto

package com.example.javabasic.sample.serialization;

public final class DmpDataProto {
    private DmpDataProto() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface DmpDataOrBuilder extends
            // @@protoc_insertion_point(interface_extends:toutiao.dmp.DmpData)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        java.util.List<IdItem>
        getIdListList();

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        IdItem getIdList(int index);

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        int getIdListCount();

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        java.util.List<? extends IdItemOrBuilder>
        getIdListOrBuilderList();

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        IdItemOrBuilder getIdListOrBuilder(
                int index);
    }

    /**
     * <pre>
     * 上传文件每行一个base64编码的字符串，每个字符串包含一个完整的DmpData消息二进制字节串
     * </pre>
     * <p>
     * Protobuf type {@code toutiao.dmp.DmpData}
     */
    public static final class DmpData extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:toutiao.dmp.DmpData)
            DmpDataOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use DmpData.newBuilder() to construct.
        private DmpData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private DmpData() {
            idList_ = java.util.Collections.emptyList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected Object newInstance(
                UnusedPrivateParameter unused) {
            return new DmpData();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private DmpData(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                idList_ = new java.util.ArrayList<IdItem>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            idList_.add(
                                    input.readMessage(IdItem.PARSER, extensionRegistry));
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    idList_ = java.util.Collections.unmodifiableList(idList_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmpDataProto.internal_static_toutiao_dmp_DmpData_descriptor;
        }

        @Override
        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmpDataProto.internal_static_toutiao_dmp_DmpData_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            DmpData.class, Builder.class);
        }

        public static final int IDLIST_FIELD_NUMBER = 1;
        private java.util.List<IdItem> idList_;

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        @Override
        public java.util.List<IdItem> getIdListList() {
            return idList_;
        }

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        @Override
        public java.util.List<? extends IdItemOrBuilder>
        getIdListOrBuilderList() {
            return idList_;
        }

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        @Override
        public int getIdListCount() {
            return idList_.size();
        }

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        @Override
        public IdItem getIdList(int index) {
            return idList_.get(index);
        }

        /**
         * <pre>
         * 每行数据包含的idList大小不能超过10000
         * </pre>
         *
         * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
         */
        @Override
        public IdItemOrBuilder getIdListOrBuilder(
                int index) {
            return idList_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            for (int i = 0; i < getIdListCount(); i++) {
                if (!getIdList(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < idList_.size(); i++) {
                output.writeMessage(1, idList_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < idList_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, idList_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof DmpData)) {
                return super.equals(obj);
            }
            DmpData other = (DmpData) obj;

            if (!getIdListList()
                    .equals(other.getIdListList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getIdListCount() > 0) {
                hash = (37 * hash) + IDLIST_FIELD_NUMBER;
                hash = (53 * hash) + getIdListList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static DmpData parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DmpData parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DmpData parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DmpData parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DmpData parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static DmpData parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static DmpData parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static DmpData parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static DmpData parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static DmpData parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static DmpData parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static DmpData parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(DmpData prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * 上传文件每行一个base64编码的字符串，每个字符串包含一个完整的DmpData消息二进制字节串
         * </pre>
         * <p>
         * Protobuf type {@code toutiao.dmp.DmpData}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:toutiao.dmp.DmpData)
                DmpDataOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmpDataProto.internal_static_toutiao_dmp_DmpData_descriptor;
            }

            @Override
            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmpDataProto.internal_static_toutiao_dmp_DmpData_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                DmpData.class, Builder.class);
            }

            // Construct using com.example.javabasic.sample.serialization.DmpDataProto.DmpData.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getIdListFieldBuilder();
                }
            }

            @Override
            public Builder clear() {
                super.clear();
                if (idListBuilder_ == null) {
                    idList_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    idListBuilder_.clear();
                }
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmpDataProto.internal_static_toutiao_dmp_DmpData_descriptor;
            }

            @Override
            public DmpData getDefaultInstanceForType() {
                return DmpData.getDefaultInstance();
            }

            @Override
            public DmpData build() {
                DmpData result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public DmpData buildPartial() {
                DmpData result = new DmpData(this);
                int from_bitField0_ = bitField0_;
                if (idListBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        idList_ = java.util.Collections.unmodifiableList(idList_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.idList_ = idList_;
                } else {
                    result.idList_ = idListBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof DmpData) {
                    return mergeFrom((DmpData) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(DmpData other) {
                if (other == DmpData.getDefaultInstance()) return this;
                if (idListBuilder_ == null) {
                    if (!other.idList_.isEmpty()) {
                        if (idList_.isEmpty()) {
                            idList_ = other.idList_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureIdListIsMutable();
                            idList_.addAll(other.idList_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.idList_.isEmpty()) {
                        if (idListBuilder_.isEmpty()) {
                            idListBuilder_.dispose();
                            idListBuilder_ = null;
                            idList_ = other.idList_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            idListBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getIdListFieldBuilder() : null;
                        } else {
                            idListBuilder_.addAllMessages(other.idList_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                for (int i = 0; i < getIdListCount(); i++) {
                    if (!getIdList(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }

            @Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                DmpData parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (DmpData) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private java.util.List<IdItem> idList_ =
                    java.util.Collections.emptyList();

            private void ensureIdListIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    idList_ = new java.util.ArrayList<IdItem>(idList_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    IdItem, IdItem.Builder, IdItemOrBuilder> idListBuilder_;

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public java.util.List<IdItem> getIdListList() {
                if (idListBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(idList_);
                } else {
                    return idListBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public int getIdListCount() {
                if (idListBuilder_ == null) {
                    return idList_.size();
                } else {
                    return idListBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public IdItem getIdList(int index) {
                if (idListBuilder_ == null) {
                    return idList_.get(index);
                } else {
                    return idListBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public Builder setIdList(
                    int index, IdItem value) {
                if (idListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureIdListIsMutable();
                    idList_.set(index, value);
                    onChanged();
                } else {
                    idListBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public Builder setIdList(
                    int index, IdItem.Builder builderForValue) {
                if (idListBuilder_ == null) {
                    ensureIdListIsMutable();
                    idList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    idListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public Builder addIdList(IdItem value) {
                if (idListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureIdListIsMutable();
                    idList_.add(value);
                    onChanged();
                } else {
                    idListBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public Builder addIdList(
                    int index, IdItem value) {
                if (idListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureIdListIsMutable();
                    idList_.add(index, value);
                    onChanged();
                } else {
                    idListBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public Builder addIdList(
                    IdItem.Builder builderForValue) {
                if (idListBuilder_ == null) {
                    ensureIdListIsMutable();
                    idList_.add(builderForValue.build());
                    onChanged();
                } else {
                    idListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public Builder addIdList(
                    int index, IdItem.Builder builderForValue) {
                if (idListBuilder_ == null) {
                    ensureIdListIsMutable();
                    idList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    idListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public Builder addAllIdList(
                    Iterable<? extends IdItem> values) {
                if (idListBuilder_ == null) {
                    ensureIdListIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, idList_);
                    onChanged();
                } else {
                    idListBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public Builder clearIdList() {
                if (idListBuilder_ == null) {
                    idList_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    idListBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public Builder removeIdList(int index) {
                if (idListBuilder_ == null) {
                    ensureIdListIsMutable();
                    idList_.remove(index);
                    onChanged();
                } else {
                    idListBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public IdItem.Builder getIdListBuilder(
                    int index) {
                return getIdListFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public IdItemOrBuilder getIdListOrBuilder(
                    int index) {
                if (idListBuilder_ == null) {
                    return idList_.get(index);
                } else {
                    return idListBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public java.util.List<? extends IdItemOrBuilder>
            getIdListOrBuilderList() {
                if (idListBuilder_ != null) {
                    return idListBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(idList_);
                }
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public IdItem.Builder addIdListBuilder() {
                return getIdListFieldBuilder().addBuilder(
                        IdItem.getDefaultInstance());
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public IdItem.Builder addIdListBuilder(
                    int index) {
                return getIdListFieldBuilder().addBuilder(
                        index, IdItem.getDefaultInstance());
            }

            /**
             * <pre>
             * 每行数据包含的idList大小不能超过10000
             * </pre>
             *
             * <code>repeated .toutiao.dmp.IdItem idList = 1;</code>
             */
            public java.util.List<IdItem.Builder>
            getIdListBuilderList() {
                return getIdListFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    IdItem, IdItem.Builder, IdItemOrBuilder>
            getIdListFieldBuilder() {
                if (idListBuilder_ == null) {
                    idListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            IdItem, IdItem.Builder, IdItemOrBuilder>(
                            idList_,
                            ((bitField0_ & 0x00000001) != 0),
                            getParentForChildren(),
                            isClean());
                    idList_ = null;
                }
                return idListBuilder_;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:toutiao.dmp.DmpData)
        }

        // @@protoc_insertion_point(class_scope:toutiao.dmp.DmpData)
        private static final DmpData DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new DmpData();
        }

        public static DmpData getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated
        public static final com.google.protobuf.Parser<DmpData>
                PARSER = new com.google.protobuf.AbstractParser<DmpData>() {
            @Override
            public DmpData parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new DmpData(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<DmpData> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<DmpData> getParserForType() {
            return PARSER;
        }

        @Override
        public DmpData getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface IdItemOrBuilder extends
            // @@protoc_insertion_point(interface_extends:toutiao.dmp.IdItem)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 若不设置，默认以上传文件的创建时间为此条记录的创建时间
         * </pre>
         *
         * <code>optional uint32 timestamp = 1;</code>
         *
         * @return Whether the timestamp field is set.
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * 若不设置，默认以上传文件的创建时间为此条记录的创建时间
         * </pre>
         *
         * <code>optional uint32 timestamp = 1;</code>
         *
         * @return The timestamp.
         */
        int getTimestamp();

        /**
         * <pre>
         * 指定此id的类型，如IMEI、IDFA等
         * </pre>
         *
         * <code>required .toutiao.dmp.IdItem.DataType dataType = 2;</code>
         *
         * @return Whether the dataType field is set.
         */
        boolean hasDataType();

        /**
         * <pre>
         * 指定此id的类型，如IMEI、IDFA等
         * </pre>
         *
         * <code>required .toutiao.dmp.IdItem.DataType dataType = 2;</code>
         *
         * @return The dataType.
         */
        IdItem.DataType getDataType();

        /**
         * <pre>
         * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
         * </pre>
         *
         * <code>required string id = 3;</code>
         *
         * @return Whether the id field is set.
         */
        boolean hasId();

        /**
         * <pre>
         * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
         * </pre>
         *
         * <code>required string id = 3;</code>
         *
         * @return The id.
         */
        String getId();

        /**
         * <pre>
         * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
         * </pre>
         *
         * <code>required string id = 3;</code>
         *
         * @return The bytes for id.
         */
        com.google.protobuf.ByteString
        getIdBytes();

        /**
         * <pre>
         * 标识此id的业务标签字符串
         * </pre>
         *
         * <code>repeated string tags = 4;</code>
         *
         * @return A list containing the tags.
         */
        java.util.List<String>
        getTagsList();

        /**
         * <pre>
         * 标识此id的业务标签字符串
         * </pre>
         *
         * <code>repeated string tags = 4;</code>
         *
         * @return The count of tags.
         */
        int getTagsCount();

        /**
         * <pre>
         * 标识此id的业务标签字符串
         * </pre>
         *
         * <code>repeated string tags = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The tags at the given index.
         */
        String getTags(int index);

        /**
         * <pre>
         * 标识此id的业务标签字符串
         * </pre>
         *
         * <code>repeated string tags = 4;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the tags at the given index.
         */
        com.google.protobuf.ByteString
        getTagsBytes(int index);
    }

    /**
     * Protobuf type {@code toutiao.dmp.IdItem}
     */
    public static final class IdItem extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:toutiao.dmp.IdItem)
            IdItemOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use IdItem.newBuilder() to construct.
        private IdItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private IdItem() {
            dataType_ = 0;
            id_ = "";
            tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        }

        @Override
        @SuppressWarnings({"unused"})
        protected Object newInstance(
                UnusedPrivateParameter unused) {
            return new IdItem();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private IdItem(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            timestamp_ = input.readUInt32();
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            @SuppressWarnings("deprecation")
                            DataType value = DataType.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                            } else {
                                bitField0_ |= 0x00000002;
                                dataType_ = rawValue;
                            }
                            break;
                        }
                        case 26: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000004;
                            id_ = bs;
                            break;
                        }
                        case 34: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                tags_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            tags_.add(bs);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000008) != 0)) {
                    tags_ = tags_.getUnmodifiableView();
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return DmpDataProto.internal_static_toutiao_dmp_IdItem_descriptor;
        }

        @Override
        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return DmpDataProto.internal_static_toutiao_dmp_IdItem_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            IdItem.class, Builder.class);
        }

        /**
         * Protobuf enum {@code toutiao.dmp.IdItem.DataType}
         */
        public enum DataType
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>IMEI = 0;</code>
             */
            IMEI(0),
            /**
             * <code>IDFA = 1;</code>
             */
            IDFA(1),
            /**
             * <code>UID = 2;</code>
             */
            UID(2),
            /**
             * <code>IMEI_MD5 = 4;</code>
             */
            IMEI_MD5(4),
            /**
             * <code>IDFA_MD5 = 5;</code>
             */
            IDFA_MD5(5),
            /**
             * <code>MOBILE_HASH_SHA256 = 6;</code>
             */
            MOBILE_HASH_SHA256(6),
            /**
             * <code>OAID = 7;</code>
             */
            OAID(7),
            /**
             * <code>OAID_MD5 = 8;</code>
             */
            OAID_MD5(8),
            ;

            /**
             * <code>IMEI = 0;</code>
             */
            public static final int IMEI_VALUE = 0;
            /**
             * <code>IDFA = 1;</code>
             */
            public static final int IDFA_VALUE = 1;
            /**
             * <code>UID = 2;</code>
             */
            public static final int UID_VALUE = 2;
            /**
             * <code>IMEI_MD5 = 4;</code>
             */
            public static final int IMEI_MD5_VALUE = 4;
            /**
             * <code>IDFA_MD5 = 5;</code>
             */
            public static final int IDFA_MD5_VALUE = 5;
            /**
             * <code>MOBILE_HASH_SHA256 = 6;</code>
             */
            public static final int MOBILE_HASH_SHA256_VALUE = 6;
            /**
             * <code>OAID = 7;</code>
             */
            public static final int OAID_VALUE = 7;
            /**
             * <code>OAID_MD5 = 8;</code>
             */
            public static final int OAID_MD5_VALUE = 8;


            public final int getNumber() {
                return value;
            }

            /**
             * @param value The numeric wire value of the corresponding enum entry.
             * @return The enum associated with the given numeric wire value.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @Deprecated
            public static DataType valueOf(int value) {
                return forNumber(value);
            }

            /**
             * @param value The numeric wire value of the corresponding enum entry.
             * @return The enum associated with the given numeric wire value.
             */
            public static DataType forNumber(int value) {
                switch (value) {
                    case 0:
                        return IMEI;
                    case 1:
                        return IDFA;
                    case 2:
                        return UID;
                    case 4:
                        return IMEI_MD5;
                    case 5:
                        return IDFA_MD5;
                    case 6:
                        return MOBILE_HASH_SHA256;
                    case 7:
                        return OAID;
                    case 8:
                        return OAID_MD5;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<DataType>
            internalGetValueMap() {
                return internalValueMap;
            }

            private static final com.google.protobuf.Internal.EnumLiteMap<
                    DataType> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
                        public DataType findValueByNumber(int number) {
                            return DataType.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return IdItem.getDescriptor().getEnumTypes().get(0);
            }

            private static final DataType[] VALUES = values();

            public static DataType valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private DataType(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:toutiao.dmp.IdItem.DataType)
        }

        private int bitField0_;
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        private int timestamp_;

        /**
         * <pre>
         * 若不设置，默认以上传文件的创建时间为此条记录的创建时间
         * </pre>
         *
         * <code>optional uint32 timestamp = 1;</code>
         *
         * @return Whether the timestamp field is set.
         */
        @Override
        public boolean hasTimestamp() {
            return ((bitField0_ & 0x00000001) != 0);
        }

        /**
         * <pre>
         * 若不设置，默认以上传文件的创建时间为此条记录的创建时间
         * </pre>
         *
         * <code>optional uint32 timestamp = 1;</code>
         *
         * @return The timestamp.
         */
        @Override
        public int getTimestamp() {
            return timestamp_;
        }

        public static final int DATATYPE_FIELD_NUMBER = 2;
        private int dataType_;

        /**
         * <pre>
         * 指定此id的类型，如IMEI、IDFA等
         * </pre>
         *
         * <code>required .toutiao.dmp.IdItem.DataType dataType = 2;</code>
         *
         * @return Whether the dataType field is set.
         */
        @Override
        public boolean hasDataType() {
            return ((bitField0_ & 0x00000002) != 0);
        }

        /**
         * <pre>
         * 指定此id的类型，如IMEI、IDFA等
         * </pre>
         *
         * <code>required .toutiao.dmp.IdItem.DataType dataType = 2;</code>
         *
         * @return The dataType.
         */
        @Override
        public DataType getDataType() {
            @SuppressWarnings("deprecation")
            DataType result = DataType.valueOf(dataType_);
            return result == null ? DataType.IMEI : result;
        }

        public static final int ID_FIELD_NUMBER = 3;
        private volatile Object id_;

        /**
         * <pre>
         * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
         * </pre>
         *
         * <code>required string id = 3;</code>
         *
         * @return Whether the id field is set.
         */
        @Override
        public boolean hasId() {
            return ((bitField0_ & 0x00000004) != 0);
        }

        /**
         * <pre>
         * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
         * </pre>
         *
         * <code>required string id = 3;</code>
         *
         * @return The id.
         */
        @Override
        public String getId() {
            Object ref = id_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    id_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
         * </pre>
         *
         * <code>required string id = 3;</code>
         *
         * @return The bytes for id.
         */
        @Override
        public com.google.protobuf.ByteString
        getIdBytes() {
            Object ref = id_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                id_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int TAGS_FIELD_NUMBER = 4;
        private com.google.protobuf.LazyStringList tags_;

        /**
         * <pre>
         * 标识此id的业务标签字符串
         * </pre>
         *
         * <code>repeated string tags = 4;</code>
         *
         * @return A list containing the tags.
         */
        public com.google.protobuf.ProtocolStringList
        getTagsList() {
            return tags_;
        }

        /**
         * <pre>
         * 标识此id的业务标签字符串
         * </pre>
         *
         * <code>repeated string tags = 4;</code>
         *
         * @return The count of tags.
         */
        public int getTagsCount() {
            return tags_.size();
        }

        /**
         * <pre>
         * 标识此id的业务标签字符串
         * </pre>
         *
         * <code>repeated string tags = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The tags at the given index.
         */
        public String getTags(int index) {
            return tags_.get(index);
        }

        /**
         * <pre>
         * 标识此id的业务标签字符串
         * </pre>
         *
         * <code>repeated string tags = 4;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the tags at the given index.
         */
        public com.google.protobuf.ByteString
        getTagsBytes(int index) {
            return tags_.getByteString(index);
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasDataType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasId()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) != 0)) {
                output.writeUInt32(1, timestamp_);
            }
            if (((bitField0_ & 0x00000002) != 0)) {
                output.writeEnum(2, dataType_);
            }
            if (((bitField0_ & 0x00000004) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, id_);
            }
            for (int i = 0; i < tags_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, tags_.getRaw(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, timestamp_);
            }
            if (((bitField0_ & 0x00000002) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, dataType_);
            }
            if (((bitField0_ & 0x00000004) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, id_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < tags_.size(); i++) {
                    dataSize += computeStringSizeNoTag(tags_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getTagsList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof IdItem)) {
                return super.equals(obj);
            }
            IdItem other = (IdItem) obj;

            if (hasTimestamp() != other.hasTimestamp()) return false;
            if (hasTimestamp()) {
                if (getTimestamp()
                        != other.getTimestamp()) return false;
            }
            if (hasDataType() != other.hasDataType()) return false;
            if (hasDataType()) {
                if (dataType_ != other.dataType_) return false;
            }
            if (hasId() != other.hasId()) return false;
            if (hasId()) {
                if (!getId()
                        .equals(other.getId())) return false;
            }
            if (!getTagsList()
                    .equals(other.getTagsList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp();
            }
            if (hasDataType()) {
                hash = (37 * hash) + DATATYPE_FIELD_NUMBER;
                hash = (53 * hash) + dataType_;
            }
            if (hasId()) {
                hash = (37 * hash) + ID_FIELD_NUMBER;
                hash = (53 * hash) + getId().hashCode();
            }
            if (getTagsCount() > 0) {
                hash = (37 * hash) + TAGS_FIELD_NUMBER;
                hash = (53 * hash) + getTagsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static IdItem parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static IdItem parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static IdItem parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static IdItem parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static IdItem parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static IdItem parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static IdItem parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static IdItem parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static IdItem parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static IdItem parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static IdItem parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static IdItem parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(IdItem prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code toutiao.dmp.IdItem}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:toutiao.dmp.IdItem)
                IdItemOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return DmpDataProto.internal_static_toutiao_dmp_IdItem_descriptor;
            }

            @Override
            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return DmpDataProto.internal_static_toutiao_dmp_IdItem_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                IdItem.class, Builder.class);
            }

            // Construct using com.example.javabasic.sample.serialization.DmpDataProto.IdItem.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public Builder clear() {
                super.clear();
                timestamp_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                dataType_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                id_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return DmpDataProto.internal_static_toutiao_dmp_IdItem_descriptor;
            }

            @Override
            public IdItem getDefaultInstanceForType() {
                return IdItem.getDefaultInstance();
            }

            @Override
            public IdItem build() {
                IdItem result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public IdItem buildPartial() {
                IdItem result = new IdItem(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    result.timestamp_ = timestamp_;
                    to_bitField0_ |= 0x00000001;
                }
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.dataType_ = dataType_;
                if (((from_bitField0_ & 0x00000004) != 0)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.id_ = id_;
                if (((bitField0_ & 0x00000008) != 0)) {
                    tags_ = tags_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.tags_ = tags_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof IdItem) {
                    return mergeFrom((IdItem) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(IdItem other) {
                if (other == IdItem.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    setTimestamp(other.getTimestamp());
                }
                if (other.hasDataType()) {
                    setDataType(other.getDataType());
                }
                if (other.hasId()) {
                    bitField0_ |= 0x00000004;
                    id_ = other.id_;
                    onChanged();
                }
                if (!other.tags_.isEmpty()) {
                    if (tags_.isEmpty()) {
                        tags_ = other.tags_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureTagsIsMutable();
                        tags_.addAll(other.tags_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                if (!hasDataType()) {
                    return false;
                }
                if (!hasId()) {
                    return false;
                }
                return true;
            }

            @Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                IdItem parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (IdItem) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int timestamp_;

            /**
             * <pre>
             * 若不设置，默认以上传文件的创建时间为此条记录的创建时间
             * </pre>
             *
             * <code>optional uint32 timestamp = 1;</code>
             *
             * @return Whether the timestamp field is set.
             */
            @Override
            public boolean hasTimestamp() {
                return ((bitField0_ & 0x00000001) != 0);
            }

            /**
             * <pre>
             * 若不设置，默认以上传文件的创建时间为此条记录的创建时间
             * </pre>
             *
             * <code>optional uint32 timestamp = 1;</code>
             *
             * @return The timestamp.
             */
            @Override
            public int getTimestamp() {
                return timestamp_;
            }

            /**
             * <pre>
             * 若不设置，默认以上传文件的创建时间为此条记录的创建时间
             * </pre>
             *
             * <code>optional uint32 timestamp = 1;</code>
             *
             * @param value The timestamp to set.
             * @return This builder for chaining.
             */
            public Builder setTimestamp(int value) {
                bitField0_ |= 0x00000001;
                timestamp_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 若不设置，默认以上传文件的创建时间为此条记录的创建时间
             * </pre>
             *
             * <code>optional uint32 timestamp = 1;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearTimestamp() {
                bitField0_ = (bitField0_ & ~0x00000001);
                timestamp_ = 0;
                onChanged();
                return this;
            }

            private int dataType_ = 0;

            /**
             * <pre>
             * 指定此id的类型，如IMEI、IDFA等
             * </pre>
             *
             * <code>required .toutiao.dmp.IdItem.DataType dataType = 2;</code>
             *
             * @return Whether the dataType field is set.
             */
            @Override
            public boolean hasDataType() {
                return ((bitField0_ & 0x00000002) != 0);
            }

            /**
             * <pre>
             * 指定此id的类型，如IMEI、IDFA等
             * </pre>
             *
             * <code>required .toutiao.dmp.IdItem.DataType dataType = 2;</code>
             *
             * @return The dataType.
             */
            @Override
            public DataType getDataType() {
                @SuppressWarnings("deprecation")
                DataType result = DataType.valueOf(dataType_);
                return result == null ? DataType.IMEI : result;
            }

            /**
             * <pre>
             * 指定此id的类型，如IMEI、IDFA等
             * </pre>
             *
             * <code>required .toutiao.dmp.IdItem.DataType dataType = 2;</code>
             *
             * @param value The dataType to set.
             * @return This builder for chaining.
             */
            public Builder setDataType(DataType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                dataType_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 指定此id的类型，如IMEI、IDFA等
             * </pre>
             *
             * <code>required .toutiao.dmp.IdItem.DataType dataType = 2;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearDataType() {
                bitField0_ = (bitField0_ & ~0x00000002);
                dataType_ = 0;
                onChanged();
                return this;
            }

            private Object id_ = "";

            /**
             * <pre>
             * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
             * </pre>
             *
             * <code>required string id = 3;</code>
             *
             * @return Whether the id field is set.
             */
            public boolean hasId() {
                return ((bitField0_ & 0x00000004) != 0);
            }

            /**
             * <pre>
             * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
             * </pre>
             *
             * <code>required string id = 3;</code>
             *
             * @return The id.
             */
            public String getId() {
                Object ref = id_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        id_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
             * </pre>
             *
             * <code>required string id = 3;</code>
             *
             * @return The bytes for id.
             */
            public com.google.protobuf.ByteString
            getIdBytes() {
                Object ref = id_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    id_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
             * </pre>
             *
             * <code>required string id = 3;</code>
             *
             * @param value The id to set.
             * @return This builder for chaining.
             */
            public Builder setId(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
             * </pre>
             *
             * <code>required string id = 3;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearId() {
                bitField0_ = (bitField0_ & ~0x00000004);
                id_ = getDefaultInstance().getId();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 根据dataType字段的类型，放置对应类型的id的字符串，需要小写
             * </pre>
             *
             * <code>required string id = 3;</code>
             *
             * @param value The bytes for id to set.
             * @return This builder for chaining.
             */
            public Builder setIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                id_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureTagsIsMutable() {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <pre>
             * 标识此id的业务标签字符串
             * </pre>
             *
             * <code>repeated string tags = 4;</code>
             *
             * @return A list containing the tags.
             */
            public com.google.protobuf.ProtocolStringList
            getTagsList() {
                return tags_.getUnmodifiableView();
            }

            /**
             * <pre>
             * 标识此id的业务标签字符串
             * </pre>
             *
             * <code>repeated string tags = 4;</code>
             *
             * @return The count of tags.
             */
            public int getTagsCount() {
                return tags_.size();
            }

            /**
             * <pre>
             * 标识此id的业务标签字符串
             * </pre>
             *
             * <code>repeated string tags = 4;</code>
             *
             * @param index The index of the element to return.
             * @return The tags at the given index.
             */
            public String getTags(int index) {
                return tags_.get(index);
            }

            /**
             * <pre>
             * 标识此id的业务标签字符串
             * </pre>
             *
             * <code>repeated string tags = 4;</code>
             *
             * @param index The index of the value to return.
             * @return The bytes of the tags at the given index.
             */
            public com.google.protobuf.ByteString
            getTagsBytes(int index) {
                return tags_.getByteString(index);
            }

            /**
             * <pre>
             * 标识此id的业务标签字符串
             * </pre>
             *
             * <code>repeated string tags = 4;</code>
             *
             * @param index The index to set the value at.
             * @param value The tags to set.
             * @return This builder for chaining.
             */
            public Builder setTags(
                    int index, String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureTagsIsMutable();
                tags_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 标识此id的业务标签字符串
             * </pre>
             *
             * <code>repeated string tags = 4;</code>
             *
             * @param value The tags to add.
             * @return This builder for chaining.
             */
            public Builder addTags(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureTagsIsMutable();
                tags_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 标识此id的业务标签字符串
             * </pre>
             *
             * <code>repeated string tags = 4;</code>
             *
             * @param values The tags to add.
             * @return This builder for chaining.
             */
            public Builder addAllTags(
                    Iterable<String> values) {
                ensureTagsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, tags_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 标识此id的业务标签字符串
             * </pre>
             *
             * <code>repeated string tags = 4;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearTags() {
                tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 标识此id的业务标签字符串
             * </pre>
             *
             * <code>repeated string tags = 4;</code>
             *
             * @param value The bytes of the tags to add.
             * @return This builder for chaining.
             */
            public Builder addTagsBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureTagsIsMutable();
                tags_.add(value);
                onChanged();
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:toutiao.dmp.IdItem)
        }

        // @@protoc_insertion_point(class_scope:toutiao.dmp.IdItem)
        private static final IdItem DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new IdItem();
        }

        public static IdItem getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @Deprecated
        public static final com.google.protobuf.Parser<IdItem>
                PARSER = new com.google.protobuf.AbstractParser<IdItem>() {
            @Override
            public IdItem parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new IdItem(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<IdItem> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<IdItem> getParserForType() {
            return PARSER;
        }

        @Override
        public IdItem getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_toutiao_dmp_DmpData_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_toutiao_dmp_DmpData_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_toutiao_dmp_IdItem_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_toutiao_dmp_IdItem_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\006.proto\022\013toutiao.dmp\".\n\007DmpData\022#\n\006idLi" +
                        "st\030\001 \003(\0132\023.toutiao.dmp.IdItem\"\332\001\n\006IdItem" +
                        "\022\021\n\ttimestamp\030\001 \001(\r\022.\n\010dataType\030\002 \002(\0162\034." +
                        "toutiao.dmp.IdItem.DataType\022\n\n\002id\030\003 \002(\t\022" +
                        "\014\n\004tags\030\004 \003(\t\"s\n\010DataType\022\010\n\004IMEI\020\000\022\010\n\004I" +
                        "DFA\020\001\022\007\n\003UID\020\002\022\014\n\010IMEI_MD5\020\004\022\014\n\010IDFA_MD5" +
                        "\020\005\022\026\n\022MOBILE_HASH_SHA256\020\006\022\010\n\004OAID\020\007\022\014\n\010" +
                        "OAID_MD5\020\010B:\n*com.example.javabasic.samp" +
                        "le.serializationB\014DmpDataProto"
        };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        });
        internal_static_toutiao_dmp_DmpData_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_toutiao_dmp_DmpData_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_toutiao_dmp_DmpData_descriptor,
                new String[]{"IdList",});
        internal_static_toutiao_dmp_IdItem_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_toutiao_dmp_IdItem_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_toutiao_dmp_IdItem_descriptor,
                new String[]{"Timestamp", "DataType", "Id", "Tags",});
    }

    // @@protoc_insertion_point(outer_class_scope)
}
